// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WorkshopListContainer /> <ConnectedWorkshopListContainer /> should render connected component 1`] = `
<withRouter(WithWidth)
  dispatch={[Function]}
  params={
    Object {
      "workshop": "123",
    }
  }
  router={
    Object {
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "isActive": [Function],
      "push": [Function],
      "replace": [Function],
      "setRouteLeaveHook": [Function],
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "notify": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": null,
    }
  }
  width={3}
  workshops={
    Array [
      Object {
        "instructors": Array [
          Object {
            "avatar": "",
            "name": "Paco",
            "url": "",
          },
        ],
        "price": 990,
        "title": "reactjs_advanced",
        "url": "https://reactjs.academy/react-redux-training-london",
      },
    ]
  }
/>
`;

exports[`<WorkshopListContainer /> should render with default props 1`] = `
<WorkshopList
  params={
    Object {
      "workshop": "123",
    }
  }
  router={
    Object {
      "push": [Function],
    }
  }
  showWorkshop={[Function]}
  width={3}
  workshop="123"
  workshops={Array []}
/>
`;
